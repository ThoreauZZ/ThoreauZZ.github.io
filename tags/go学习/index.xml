<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go学习 on 造舟野渡</title>
    <link>http://thoreauz.com/tags/go%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in go学习 on 造舟野渡</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <copyright>All rights reserved - 2017</copyright>
    <lastBuildDate>Sat, 11 Nov 2017 23:28:27 +0000</lastBuildDate><atom:link href="http://thoreauz.com/tags/go%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go语言8-Json</title>
      <link>http://thoreauz.com/2017/11/11/go-learn-8-json/</link>
      <pubDate>Sat, 11 Nov 2017 23:28:27 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/11/11/go-learn-8-json/</guid>
      <description>Json作为如今最流行的数据格式，本文看看如何使用GO处理Json。 解码 先来看示例，访问github api，解析成struct。 curl -s https://api.github.com/users/ThoreauZZ |jq { &amp;#34;login&amp;#34;:</description>
    </item>
    
    <item>
      <title>Go语言9-测试和性能</title>
      <link>http://thoreauz.com/2017/11/11/go-learn-9-test/</link>
      <pubDate>Sat, 11 Nov 2017 23:28:27 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/11/11/go-learn-9-test/</guid>
      <description>测试驱动开发推荐编写测试-运行测试-实现-运行测试-重构-运行测试的的开发流程。开发过程中就进行单元测试和基准测试，在GO语言中也一样可以。</description>
    </item>
    
    <item>
      <title>Go语言7-日志</title>
      <link>http://thoreauz.com/2017/11/11/go-learn-7-json/</link>
      <pubDate>Sat, 11 Nov 2017 23:28:21 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/11/11/go-learn-7-json/</guid>
      <description>日志是程序开发很重要的一部分，在java中，有一大堆第三方包，以至于各种冲突各种排除。本文看看go如何记录日志。 使用 go 自带log包，简单使用</description>
    </item>
    
    <item>
      <title>Go语言6-网络编程</title>
      <link>http://thoreauz.com/2017/08/09/go-learn-6-network-programming/</link>
      <pubDate>Wed, 09 Aug 2017 19:56:14 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/08/09/go-learn-6-network-programming/</guid>
      <description>Go语言标准库里提供的net包,支持基于IP层、TCP/UDP层及更高层面(如HTTP、FTP、SMTP)的网络操作，其中用于IP层的称为R</description>
    </item>
    
    <item>
      <title>Go语言5-并发</title>
      <link>http://thoreauz.com/2017/08/07/go-learn-5-concurrent/</link>
      <pubDate>Mon, 07 Aug 2017 13:47:59 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/08/07/go-learn-5-concurrent/</guid>
      <description>我们常听到GO的一个主要特性介绍：“天生支持高并发”，什么叫天生支持呢？ 并发和并行不是一回事，并行是多个处理器同时执行不同指令，而并发是指一</description>
    </item>
    
    <item>
      <title>Go语言4-嵌入类型</title>
      <link>http://thoreauz.com/2017/08/01/go-learn-4-Embedded-Types/</link>
      <pubDate>Tue, 01 Aug 2017 00:02:22 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/08/01/go-learn-4-Embedded-Types/</guid>
      <description>Java中有内部类和匿名类的说法，但是Go的嵌入类和JAVA完全两回事。在Go语言中，新类可以嵌入一个已有类型作为内部类型，从而它就作为内部</description>
    </item>
    
    <item>
      <title>Go语言3-接口</title>
      <link>http://thoreauz.com/2017/07/31/go-learn-3-interface/</link>
      <pubDate>Mon, 31 Jul 2017 11:17:50 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/07/31/go-learn-3-interface/</guid>
      <description>Go语言的主要设计者之一罗布·派克(Rob Pike)曾经说过,如果只能选择一个Go语言的特性移植到其他语言中，他会选择接口，所以接口在Go语</description>
    </item>
    
    <item>
      <title>Go语言2-类型</title>
      <link>http://thoreauz.com/2017/07/27/go-learn-2-struct/</link>
      <pubDate>Thu, 27 Jul 2017 00:15:11 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/07/27/go-learn-2-struct/</guid>
      <description>类型系统是指一个语言的类型体系结构,一个典型的类型系统通常包含如下基本内容: 基础类型: byte、int、bool、float等 复合类型: 如数</description>
    </item>
    
    <item>
      <title>Go语言1-数据类型</title>
      <link>http://thoreauz.com/2017/07/25/go-learn-1-data_structure/</link>
      <pubDate>Tue, 25 Jul 2017 18:29:31 +0000</pubDate>
      
      <guid>http://thoreauz.com/2017/07/25/go-learn-1-data_structure/</guid>
      <description>开始学习GO，主要原因是现在使用的一些组件如Docker，K8s，Etcd都是用GO开发的，希望能对使用的东西多一些了解，读懂简单的源码。 作</description>
    </item>
    
  </channel>
</rss>
